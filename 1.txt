package main

import (
	"errors"
	"fmt"
)

type Bird struct {
	Flight
}

type Airplane struct {
	Flight
}

type Flight interface {
	Fly()
}

func (bird Bird) Fly() error {
	return errors.New("Ошибка полёта птицы")
}

func (airplane Airplane) Fly() error {
	return errors.New("Ошибка полёта самолёта")
}

func MakeFlight(flight Flight) error {
	return errors.New("Ошибка полёта")
}

func main() {
	var bird Bird
	var airplane Airplane

	errOne := MakeFlight(bird.Flight)
	errTwo := MakeFlight(airplane.Flight)
	if errOne != nil {
		fmt.Println("Произошла ошибка 1: ", errOne)
		return
	}
	if errTwo != nil {
		fmt.Println("Произошла ошибка 2: ", errTwo)
		return
	}
}
